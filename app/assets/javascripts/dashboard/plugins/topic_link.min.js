// Define popup template.
var my_editor = null;

$.extend($.FroalaEditor.POPUP_TEMPLATES, {
  "topicPlugin.popup": '[_BUTTONS_][_CUSTOM_LAYER_]'
});

// Define popup buttons.
$.extend($.FroalaEditor.DEFAULTS, {
  popupButtons: ['popupClose', '|', 'popupButton1', 'popupButton2'],
});

// The topic popup is defined inside a plugin (new or existing).
$.FroalaEditor.PLUGINS.topicPlugin = function (editor) {
  my_editor = editor;

  // Create custom popup.
  function initPopup () {
    // Popup buttons.
    var popup_buttons = '';

    // Create the list of buttons.
    if (editor.opts.popupButtons.length > 1) {
      popup_buttons += '<div class="fr-buttons">';
      popup_buttons += editor.button.buildList(editor.opts.popupButtons);
      popup_buttons += '</div>';
    }

    // Load popup template.
    var template = {
      buttons: popup_buttons,
      custom_layer: '<div class="fr-link-insert-layer fr-layer fr-active" id="topic_popup">' +
          '<div class="fr-input-line">' +
            '<input type="text" placeholder="Text" class="fr-link-attr" name="link_text" tabindex="1" id="link_text" />' +
            '<label for="topic">Text</label>' +
          '</div>' + 
          '<div class="fr-input-line ui-front">' +
            '<input type="text" class="fr-link-attr" name="topic_slug" placeholder="Health Topic" tabindex="2" id="topic_slug_autocomplete" />' +
            '<label for="topic_slug">Health topic</label>' +
          '</div>' + 
          '<div class="fr-action-buttons">' +
            '<button type="button" class="submit fr-command fr-submit" role="button" tabindex="3" data-cmd="topicInsert">Insert</button>' +
          '</div>' + 
        '</div>' + 
        '<script>' + 
        '$(function() {' + 
          '$("#topic_slug_autocomplete").autocomplete({' +
            'source: Routes.cms_topics_search_path() + ".json",' +
            'minLength: 4,' +
          '})' +
        '})' +
        '</script>'
    };

    // Create popup.
    var $popup = editor.popups.create('topicPlugin.popup', template);

    return $popup;
  }

  // Show the popup
  function showPopup () {
    // Get the popup object defined above.
    var $popup = editor.popups.get('topicPlugin.popup');

    // If popup doesn't exist then create it.
    // To improve performance it is best to create the popup when it is first needed
    // and not when the editor is initialized.
    if (!$popup) $popup = initPopup();

    // Set the editor toolbar as the popup's container.
    editor.popups.setContainer('topicPlugin.popup', editor.$tb);

    // This will trigger the refresh event assigned to the popup.
    // editor.popups.refresh('topicPlugin.popup');

    // This topic popup is opened by pressing a button from the editor's toolbar.
    // Get the button's object in order to place the popup relative to it.
    var $btn = editor.$tb.find('.fr-command[data-cmd="topicButton"]');

    // Set the popup's position.
    var left = $btn.offset().left + $btn.outerWidth() / 2;
    var top = $btn.offset().top + (editor.opts.toolbarBottom ? 10 : $btn.outerHeight() - 10);

    $('#topic_popup button.submit').click(function(event) {
      var slug = $('#topic_slug_autocomplete').val();
      var text = $('#link_text').val();
      if (text.length > 0) {
        my_editor.selection.restore();
        var html = '<a href="' + Routes.hpl_view_health_topic_path() + '?slug=' + slug + '">' + text + '</a>';
        my_editor.html.insert(html);
        $('#topic_slug_autocomplete').val('');
        $('#link_text').val('');
      }
    });

    // Show the topic popup.
    // The button's outerHeight is required in case the popup needs to be displayed above it.
    editor.popups.show('topicPlugin.popup', left, top, $btn.outerHeight());
  }

  // Hide the topic popup.
  function hidePopup () {
    editor.popups.hide('topicPlugin.popup');
  }

  // Methods visible outside the plugin.
  return {
    showPopup: showPopup,
    hidePopup: hidePopup
  }
}

// Define an icon and command for the button that opens the topic popup.
$.FroalaEditor.DefineIcon('topicIcon', { NAME: 'book'})
$.FroalaEditor.RegisterCommand('topicButton', {
  title: 'Insert topic link',
  icon: 'topicIcon',
  undo: true,
  focus: true,
  plugin: 'topicPlugin',
  callback: function () {
    this.selection.save();
    this.topicPlugin.showPopup();
  }
});

// Define topic popup close button icon and command.
$.FroalaEditor.DefineIcon('popupClose', { NAME: 'times' });
$.FroalaEditor.RegisterCommand('popupClose', {
  title: 'Close',
  undo: false,
  focus: false,
  callback: function () {
    $('#topic_slug_autocomplete').val('');
    $('#link_text').val('');
    this.topicPlugin.hidePopup();
  }
});

