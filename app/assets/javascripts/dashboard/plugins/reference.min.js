// Define popup template.
var my_editor = null;

$.extend($.FroalaEditor.POPUP_TEMPLATES, {
  "referencePlugin.popup": '[_BUTTONS_][_CUSTOM_LAYER_]'
});

// Define popup buttons.
$.extend($.FroalaEditor.DEFAULTS, {
  popupButtons: ['popupClose', '|', 'popupButton1', 'popupButton2'],
});

// The reference popup is defined inside a plugin (new or existing).
$.FroalaEditor.PLUGINS.referencePlugin = function (editor) {
  my_editor = editor;

  // Create custom popup.
  function initPopup () {
    // Popup buttons.
    var popup_buttons = '';

    // Create the list of buttons.
    if (editor.opts.popupButtons.length > 1) {
      popup_buttons += '<div class="fr-buttons">';
      popup_buttons += editor.button.buildList(editor.opts.popupButtons);
      popup_buttons += '</div>';
    }

    // Load popup template.
    var template = {
      buttons: popup_buttons,
      custom_layer: '<div id="reference_popup" class="custom-layer form-group">' +
          '<label class="control-label" for="reference">Reference: </label>' +
          '<textarea cols="40" rows="4" class="form-control" name="reference" id="reference"></textarea>' +
          '<button type="button" class="submit btn btn-primary">Insert</button>' +
        '</div>'
    };

    // Create popup.
    var $popup = editor.popups.create('referencePlugin.popup', template);

    return $popup;
  }

  // Show the popup
  function showPopup () {
    // Get the popup object defined above.
    var $popup = editor.popups.get('referencePlugin.popup');

    // If popup doesn't exist then create it.
    // To improve performance it is best to create the popup when it is first needed
    // and not when the editor is initialized.
    if (!$popup) $popup = initPopup();

    // Set the editor toolbar as the popup's container.
    editor.popups.setContainer('referencePlugin.popup', editor.$tb);

    // This will trigger the refresh event assigned to the popup.
    // editor.popups.refresh('referencePlugin.popup');

    // This reference popup is opened by pressing a button from the editor's toolbar.
    // Get the button's object in order to place the popup relative to it.
    var $btn = editor.$tb.find('.fr-command[data-cmd="refButton"]');

    // Set the popup's position.
    var left = $btn.offset().left + $btn.outerWidth() / 2;
    var top = $btn.offset().top + (editor.opts.toolbarBottom ? 10 : $btn.outerHeight() - 10);

    $('#reference_popup button.submit').click(function(event) {
      var reference = $('#reference').val();
      my_editor.selection.restore();
      var html = '<sup><a data-content="' + reference + '" data-target="#reference" data-toggle="modal" media=""><i class="fa fa-info-circle"></i></a></sup>'
      my_editor.html.insert(html);
    });

    // Show the reference popup.
    // The button's outerHeight is required in case the popup needs to be displayed above it.
    editor.popups.show('referencePlugin.popup', left, top, $btn.outerHeight());
  }

  // Hide the reference popup.
  function hidePopup () {
    editor.popups.hide('referencePlugin.popup');
  }

  // Methods visible outside the plugin.
  return {
    showPopup: showPopup,
    hidePopup: hidePopup
  }
}

// Define an icon and command for the button that opens the reference popup.
$.FroalaEditor.DefineIcon('referenceIcon', { NAME: 'info'})
$.FroalaEditor.RegisterCommand('refButton', {
  title: 'Insert Reference',
  icon: 'referenceIcon',
  undo: true,
  focus: true,
  plugin: 'referencePlugin',
  callback: function () {
    this.selection.save();
    this.referencePlugin.showPopup();
  }
});

// Define reference popup close button icon and command.
$.FroalaEditor.DefineIcon('popupClose', { NAME: 'times' });
$.FroalaEditor.RegisterCommand('popupClose', {
  title: 'Close',
  undo: false,
  focus: false,
  callback: function () {
    $('textarea#reference').html('');
    this.referencePlugin.hidePopup();
  }
});
